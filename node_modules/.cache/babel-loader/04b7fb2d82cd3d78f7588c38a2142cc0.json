{"ast":null,"code":"var _jsxFileName = \"/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"https://fitnesstrac-kr.herokuapp.com/api\";\n\nconst Login = props => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // const history = useHistory();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    const response = await fetch(`${BASE_URL}/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    const info = await response.json();\n\n    if (info.error) {\n      return setErrorMessage(info.message);\n    } else if (info) {\n      localStorage.setItem(\"token\", info.token);\n      props.setUser({\n        token: info.token,\n        //     id: info.user.id,\n        username: info.user.username\n      });\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postForm\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Username\",\n          value: username,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 142\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 142\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this)\n    }, void 0, false) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"5oC8564e3UV+5aplqyMw1g1EJeU=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Login.js"],"names":["React","useState","BASE_URL","Login","props","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","info","json","error","message","localStorage","setItem","token","setUser","user","isLoggedIn","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AACA,MAAMC,QAAQ,GAAG,0CAAjB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD,CAHqB,CAKrB;;AAEA,QAAMU,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,eAAe,CAAC,EAAD,CAAf;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,QAAS,cAAb,EAA4B;AACtDc,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF6C;AAKtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBf,QAAAA,QAAQ,EAAEA,QADS;AAEnBE,QAAAA,QAAQ,EAAEA;AAFS,OAAf;AALgD,KAA5B,CAA5B;AAUA,UAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AACA,QAAID,IAAI,CAACE,KAAT,EAAgB;AACd,aAAOb,eAAe,CAACW,IAAI,CAACG,OAAN,CAAtB;AACD,KAFD,MAGK,IAAIH,IAAJ,EAAU;AACbI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,KAAnC;AACAvB,MAAAA,KAAK,CAACwB,OAAN,CAAc;AACVD,QAAAA,KAAK,EAAEN,IAAI,CAACM,KADF;AAEd;AACItB,QAAAA,QAAQ,EAAEgB,IAAI,CAACQ,IAAL,CAAUxB;AAHV,OAAd;AAMH;;AAAA;AAEA,GA3BD;;AA6BA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cAEQ,CAACyB,UAAD,gBAEC;AAAA,6BAAE;AAAM,QAAA,QAAQ,EAAEnB,YAAhB;AAAA,gCACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,cAA/B;AAA8C,UAAA,KAAK,EAAEN,QAArD;AAA+D,UAAA,QAAQ,EAAGO,KAAD,IAAWN,WAAW,CAACM,KAAK,CAACmB,MAAN,CAAaC,KAAd;AAA/F;AAAA;AAAA;AAAA;AAAA,gBAFG,eAE0H;AAAA;AAAA;AAAA;AAAA,gBAF1H,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJG,eAKH;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,cAA/B;AAA8C,UAAA,KAAK,EAAEzB,QAArD;AAA+D,UAAA,QAAQ,EAAGK,KAAD,IAAWJ,WAAW,CAACI,KAAK,CAACmB,MAAN,CAAaC,KAAd;AAA/F;AAAA;AAAA;AAAA;AAAA,gBALG,eAK0H;AAAA;AAAA;AAAA;AAAA,gBAL1H,eAOH;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,qBAFD,GAYE;AAdV;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAvDD;;GAAM7B,K;;KAAAA,K;AAyDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nconst BASE_URL = \"https://fitnesstrac-kr.herokuapp.com/api\";\n\nconst Login = (props) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n  \n    // const history = useHistory();\n  \n    const handleSubmit = async (event) => {\n      event.preventDefault();\n      setErrorMessage(\"\");\n      const response = await fetch(`${BASE_URL}/users/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password,\n        }),\n      });\n      const info = await response.json();\n      if (info.error) {\n        return setErrorMessage(info.message);\n      } \n      else if (info) { \n        localStorage.setItem(\"token\", info.token);\n        props.setUser({\n            token: info.token,\n        //     id: info.user.id,\n            username: info.user.username,\n          });\n        \n    };\n\n    };\n\n    return (\n        <div className=\"postForm\">\n            {\n                !isLoggedIn\n\n                ?<><form onSubmit={handleSubmit}>\n                <label>Username</label>\n                <input type=\"text\" placeholder=\"New Username\" value={username} onChange={(event) => setUsername(event.target.value)}></input><br></br>\n\n                <label>Password </label>\n                <input type=\"text\" placeholder=\"New Password\" value={password} onChange={(event) => setPassword(event.target.value)}></input><br></br>\n\n                <button type=\"submit\" className=\"button\">Login</button>\n                </form></>\n\n                : null\n            }\n        </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}