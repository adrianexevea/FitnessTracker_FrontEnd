{"ast":null,"code":"var _jsxFileName = \"/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\nconst locallySourcedToken = localStorage.getItem('token');\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const loginUser = async (usernameInput, passwordInput) => {\n      try {\n        const response = await fetch(`${BASE_URL}/users/login`, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: usernameInput,\n            password: passwordInput\n          })\n        });\n        console.log('this is the response:', response);\n\n        if (response) {\n          const {\n            token\n          } = await response.json();\n          console.log(\"this is the token:\", token);\n          localStorage.setItem(\"token\", token);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    loginUser(username, password);\n    setUsername('');\n    setPassword('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postForm\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Username\",\n          value: username,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 142\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 142\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this)\n    }, void 0, false) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Login.js"],"names":["React","useState","ReactDOM","BASE_URL","locallySourcedToken","localStorage","getItem","Login","username","setUsername","password","setPassword","handleSubmit","event","preventDefault","loginUser","usernameInput","passwordInput","response","fetch","method","headers","body","JSON","stringify","console","log","token","json","setItem","err","isLoggedIn","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\nconst locallySourcedToken = localStorage.getItem('token');\n\nconst Login = () => {\n    \n    \n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    \n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const loginUser = async (usernameInput, passwordInput) => {\n        \n            try {\n                const response = await fetch(`${BASE_URL}/users/login`, {\n                    method: \"POST\",\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                         \n                            username: usernameInput,\n                            password: passwordInput,\n                        \n                    })\n                })\n                console.log('this is the response:', response)\n        \n                if (response) {\n                    const  { token }  = await response.json();\n                    console.log(\"this is the token:\", token)\n                    localStorage.setItem(\"token\", token)\n                    \n                }\n            } catch (err) {\n                console.log(err);\n            }\n        }\n        loginUser(username, password)\n        setUsername('');\n        setPassword('');\n    }\n        \n        \n    \n\n    return (\n        <div className=\"postForm\">\n            {\n                !isLoggedIn\n\n                ?<><form onSubmit={handleSubmit}>\n                <label>Username</label>\n                <input type=\"text\" placeholder=\"New Username\" value={username} onChange={(event) => setUsername(event.target.value)}></input><br></br>\n\n                <label>Password </label>\n                <input type=\"text\" placeholder=\"New Password\" value={password} onChange={(event) => setPassword(event.target.value)}></input><br></br>\n\n                <button type=\"submit\" className=\"button\">Login</button>\n                </form></>\n\n                : null\n            }\n        </div>\n    )\n\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}