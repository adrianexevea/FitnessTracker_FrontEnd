{"ast":null,"code":"var _jsxFileName = \"/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"https://fitnesstrac-kr.herokuapp.com/api\";\n\nconst Login = props => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // const history = useHistory();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    const response = await fetch(`${BASE_URL}/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    const info = await response.json();\n\n    if (info.error) {\n      return setErrorMessage(info.message);\n    } else if (info) {\n      localStorage.setItem(\"token\", info.token);\n      props.setUser({\n        token: info.token,\n        //     id: info.user.id,\n        username: info.user.username\n      });\n    }\n\n    ;\n  }; // const locallySourcedToken = localStorage.getItem(\"token\");\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), \"Username:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: username,\n        placeholder: \"Enter Username\",\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), \"Password:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"inputPassword4\",\n        value: password,\n        placeholder: \"Enter Password\",\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Login, \"5oC8564e3UV+5aplqyMw1g1EJeU=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Login.js"],"names":["React","useState","BASE_URL","Login","props","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","info","json","error","message","localStorage","setItem","token","setUser","user","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,MAAMC,QAAQ,GAAG,0CAAjB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD,CAHqB,CAKrB;;AAEA,QAAMU,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,eAAe,CAAC,EAAD,CAAf;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,QAAS,cAAb,EAA4B;AACtDc,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF6C;AAKtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBf,QAAAA,QAAQ,EAAEA,QADS;AAEnBE,QAAAA,QAAQ,EAAEA;AAFS,OAAf;AALgD,KAA5B,CAA5B;AAUA,UAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AACA,QAAID,IAAI,CAACE,KAAT,EAAgB;AACd,aAAOb,eAAe,CAACW,IAAI,CAACG,OAAN,CAAtB;AACD,KAFD,MAGK,IAAIH,IAAJ,EAAU;AACbI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,KAAnC;AACAvB,MAAAA,KAAK,CAACwB,OAAN,CAAc;AACVD,QAAAA,KAAK,EAAEN,IAAI,CAACM,KADF;AAEd;AACItB,QAAAA,QAAQ,EAAEgB,IAAI,CAACQ,IAAL,CAAUxB;AAHV,OAAd;AAMH;;AAAA;AAEA,GA3BD,CAPqB,CAoCrB;;;AAEI,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA,cADA,4BAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,KAAK,EAAEN,QAAnD;AAA6D,QAAA,WAAW,EAAC,gBAAzE;AAA0F,QAAA,QAAQ,EAAGO,KAAD,IAAWN,WAAW,CAACM,KAAK,CAACkB,MAAN,CAAaC,KAAd;AAA1H;AAAA;AAAA;AAAA;AAAA,cAJJ,4BAMI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAC,cAAjC;AAAgD,QAAA,EAAE,EAAC,gBAAnD;AAAoE,QAAA,KAAK,EAAExB,QAA3E;AAAqF,QAAA,WAAW,EAAC,gBAAjG;AAAkH,QAAA,QAAQ,EAAGK,KAAD,IAAWJ,WAAW,CAACI,KAAK,CAACkB,MAAN,CAAaC,KAAd;AAAlJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYA;AAAA,6BACI;AAAA,kBAAItB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBP,CAzDD;;GAAMN,K;;KAAAA,K;AA2DN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nconst BASE_URL = \"https://fitnesstrac-kr.herokuapp.com/api\";\n\nconst Login = (props) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n  \n    // const history = useHistory();\n  \n    const handleSubmit = async (event) => {\n      event.preventDefault();\n      setErrorMessage(\"\");\n      const response = await fetch(`${BASE_URL}/users/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password,\n        }),\n      });\n      const info = await response.json();\n      if (info.error) {\n        return setErrorMessage(info.message);\n      } \n      else if (info) { \n        localStorage.setItem(\"token\", info.token);\n        props.setUser({\n            token: info.token,\n        //     id: info.user.id,\n            username: info.user.username,\n          });\n        \n    };\n\n    };\n\n    // const locallySourcedToken = localStorage.getItem(\"token\");\n\n        return (\n            <div>\n                <form onSubmit={handleSubmit}>\n                <br></br>\n                    Username:\n                    <br></br>\n                    <input type=\"text\" className=\"form-control\" value={username} placeholder=\"Enter Username\" onChange={(event) => setUsername(event.target.value)}></input>\n                    Password:\n                    <br></br>\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword4\" value={password} placeholder=\"Enter Password\" onChange={(event) => setPassword(event.target.value)}></input>\n                    <br></br>\n                    <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n                </form>\n            <div>\n                <p>{errorMessage}</p>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}