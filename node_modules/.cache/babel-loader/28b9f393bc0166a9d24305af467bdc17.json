{"ast":null,"code":"var _jsxFileName = \"/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\nconst locallySourcedToken = localStorage.getItem('token');\n\nconst LoginForm = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const loginUser = async (usernameInput, passwordInput) => {\n    try {\n      const request = await fetch(`${BASE_URL}/users/login`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: usernameInput,\n          password: passwordInput\n        })\n      });\n      const response = await request.json();\n      console.log('this is the response:', response);\n\n      if (!response['error']) {\n        const token = response[\"token\"];\n        console.log(\"this is the token:\", token);\n        localStorage.setItem(\"token\", token);\n      } else {\n        window.alert(response[\"error\"]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    loginUser(username, password).then(function (response) {\n      console.log(\"errorrrrr response:\", response);\n\n      if (response) {\n        setUsername('');\n        setPassword('');\n      } else {\n        window.location.reload();\n      }\n\n      ;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 138\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 138\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Login.js"],"names":["React","useState","ReactDOM","BASE_URL","locallySourcedToken","localStorage","getItem","LoginForm","username","setUsername","password","setPassword","loginUser","usernameInput","passwordInput","request","fetch","method","headers","body","JSON","stringify","response","json","console","log","token","setItem","window","alert","err","handleSubmit","event","preventDefault","then","location","reload","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\nconst locallySourcedToken = localStorage.getItem('token');\n\nconst LoginForm = () => {\n    \n    \n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const loginUser = async (usernameInput, passwordInput) => {\n    \n        try {\n            const request = await fetch(`${BASE_URL}/users/login`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                        \n                        username: usernameInput,\n                        password: passwordInput,\n                    \n                })\n            })\n            const response = await request.json();\n            console.log('this is the response:', response)\n    \n            if (!response['error']) {\n                const token = response[\"token\"]\n                console.log(\"this is the token:\", token)\n                localStorage.setItem(\"token\", token)\n            }\n            else{\n                window.alert(response[\"error\"])\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        loginUser(username, password)\n        .then(function(response){\n            console.log(\"errorrrrr response:\" ,response)\n            if(response){\n                setUsername('');\n                setPassword('');\n            }\n            else {\n                window.location.reload();\n            };\n        });\n    };\n        \n        \n    \n\n    return (\n        <div className=\"postForm\">\n            <form onSubmit={handleSubmit}>\n                <label>Enter Username</label>\n                <input type=\"text\" placeholder=\"Username\" value={username} onChange={(event) => setUsername(event.target.value)}></input><br></br>\n\n                <label>Enter Password </label>\n                <input type=\"text\" placeholder=\"Password\" value={password} onChange={(event) => setPassword(event.target.value)}></input><br></br>\n\n                <button type=\"submit\" className=\"button\">Login</button>\n            </form>\n        </div>\n    )\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}