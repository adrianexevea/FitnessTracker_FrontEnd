{"ast":null,"code":"var _jsxFileName = \"/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\nconst locallySourcedToken = localStorage.getItem('token');\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const loginUser = async (usernameInput, passwordInput) => {\n      try {\n        const response = await fetch(`${BASE_URL}/users/login`, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: usernameInput,\n            password: passwordInput\n          })\n        });\n        console.log('this is the response:', response);\n\n        if (response) {\n          const {\n            token\n          } = await response.json();\n          console.log(\"this is the token:\", token);\n          localStorage.setItem(\"token\", token);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    loginUser(username, password);\n    setUsername('');\n    setPassword('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: locallySourcedToken && locallySourcedToken.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Logged In \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 77\n        }, this) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}; // const BASE_URL = 'https://fitnesstrac-kr.herokuapp.com/api';\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [isLoggedIn, setIsLoggedIn] = useState(null)\n//     useEffect(() => {\n//         if (localStorage.getItem('token')) {\n//             setIsLoggedIn(true)\n//         } else {\n//             setIsLoggedIn(false);\n//         }\n//     },[])\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         setIsLoggedIn(true)\n//         const response = await fetch(`${BASE_URL}/users/login`, {\n//             method: \"POST\",\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//                 user: {\n//                     username: username,\n//                     password: password,\n//                 }\n//             })\n//         })\n//         if (response) {\n//         const { data: { token } }= await response.json();\n//         // console.log('This is our post request data', data)\n//         localStorage.setItem(\"token\", token);\n//         // console.log('welcome to the local storage', localStorage)\n//         setUsername('');\n//         setPassword('');\n//         }\n//     }\n//     return (\n//         <div className=\"postForm\">\n//             {\n//                 !isLoggedIn\n//                 ?<><form onSubmit={handleSubmit}>\n//                 <label>Username</label>\n//                 <input type=\"text\" placeholder=\"New Username\" value={username} onChange={(event) => setUsername(event.target.value)}></input><br></br>\n//                 <label>Password </label>\n//                 <input type=\"text\" placeholder=\"New Password\" value={password} onChange={(event) => setPassword(event.target.value)}></input><br></br>\n//                 <button type=\"submit\" className=\"button\">Login</button>\n//                 </form></>\n//                 : null\n//             }\n//         </div>\n//     )\n// }\n\n\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Login.js"],"names":["React","useEffect","useState","Link","ReactDOM","BASE_URL","locallySourcedToken","localStorage","getItem","Login","username","setUsername","password","setPassword","handleSubmit","event","preventDefault","loginUser","usernameInput","passwordInput","response","fetch","method","headers","body","JSON","stringify","console","log","token","json","setItem","err","target","value","length"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\n\n\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';\nconst locallySourcedToken = localStorage.getItem('token');\n\nconst Login = () => {\n    \n    \n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    \n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const loginUser = async (usernameInput, passwordInput) => {\n        \n            try {\n                const response = await fetch(`${BASE_URL}/users/login`, {\n                    method: \"POST\",\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                         \n                            username: usernameInput,\n                            password: passwordInput,\n                        \n                    })\n                })\n                console.log('this is the response:', response)\n        \n                if (response) {\n                    const  { token }  = await response.json();\n                    console.log(\"this is the token:\", token)\n                    localStorage.setItem(\"token\", token)\n                    \n                }\n            } catch (err) {\n                console.log(err);\n            }\n        }\n        loginUser(username, password)\n        setUsername('');\n        setPassword('');\n    }\n        \n        \n    \n\n    return (\n        <div className='login-form'>\n            <form onSubmit={handleSubmit}>\n                <h2>Log In</h2>\n\n                <input type='text' placeholder='Username' value={username} onChange={(event) => setUsername(event.target.value)}>\n                </input>\n                <br></br>\n                <br></br>\n                <input type='text' placeholder='Password' value={password} onChange={(event) => setPassword(event.target.value)}>\n                </input>\n                <br></br>\n                <br></br>\n                <button type='submit'>\n                    Log In\n                </button>\n\n                <div>\n                    {\n                        locallySourcedToken && locallySourcedToken.length ? <div> Logged In </div> : ''\n                    }\n                </div>\n            </form>\n        </div>\n\n\n    )\n\n}\n\n// const BASE_URL = 'https://fitnesstrac-kr.herokuapp.com/api';\n\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const [isLoggedIn, setIsLoggedIn] = useState(null)\n\n//     useEffect(() => {\n//         if (localStorage.getItem('token')) {\n//             setIsLoggedIn(true)\n//         } else {\n//             setIsLoggedIn(false);\n//         }\n//     },[])\n\n//     const handleSubmit = async (event) => {\n\n//         event.preventDefault();\n\n//         setIsLoggedIn(true)\n\n//         const response = await fetch(`${BASE_URL}/users/login`, {\n//             method: \"POST\",\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({\n//                 user: {\n//                     username: username,\n//                     password: password,\n//                 }\n//             })\n//         })\n\n//         if (response) {\n\n//         const { data: { token } }= await response.json();\n//         // console.log('This is our post request data', data)\n\n//         localStorage.setItem(\"token\", token);\n//         // console.log('welcome to the local storage', localStorage)\n\n//         setUsername('');\n//         setPassword('');\n//         }\n\n//     }\n\n\n//     return (\n//         <div className=\"postForm\">\n//             {\n//                 !isLoggedIn\n\n//                 ?<><form onSubmit={handleSubmit}>\n//                 <label>Username</label>\n//                 <input type=\"text\" placeholder=\"New Username\" value={username} onChange={(event) => setUsername(event.target.value)}></input><br></br>\n\n//                 <label>Password </label>\n//                 <input type=\"text\" placeholder=\"New Password\" value={password} onChange={(event) => setPassword(event.target.value)}></input><br></br>\n\n//                 <button type=\"submit\" className=\"button\">Login</button>\n//                 </form></>\n\n//                 : null\n//             }\n//         </div>\n//     )\n// }\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}