{"ast":null,"code":"var _jsxFileName = \"/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://fitnesstrac-kr.herokuapp.com/api';\n\nconst Register = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log('this is the handle submit');\n\n    const createUser = async (usernameInput, passwordInput) => {\n      console.log('These are the arguments', usernameInput, passwordInput); // console.log('This is the createUser func')\n\n      const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/register', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: usernameInput,\n          password: passwordInput\n        })\n      });\n      console.log('This is the response', response);\n\n      if (response) {\n        const {\n          token\n        } = await response.json();\n        console.log(\"this is the token:\", token);\n        localStorage.setItem(\"token\", token);\n      } // if (data) {\n      //     const  { token }  = await data.json();\n      //     console.log(\"this is the token:\", token)\n      //     localStorage.setItem(\"token\", token)\n      // }\n\n\n      return response;\n    };\n\n    createUser(username, password);\n    setUsername('');\n    setPassword('');\n  };\n\n  const locallySourcedToken = localStorage.getItem('token');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"userProfile\",\n    children: [\"This is the register page\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"registerForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Username\",\n          value: username,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: \"Create New Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Register.js"],"names":["React","useState","ReactDOM","BrowserRouter","Link","BASE_URL","Register","username","setUsername","password","setPassword","handleSubmit","event","preventDefault","console","log","createUser","usernameInput","passwordInput","response","fetch","method","headers","body","JSON","stringify","token","json","localStorage","setItem","locallySourcedToken","getItem","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nconst BASE_URL = 'https://fitnesstrac-kr.herokuapp.com/api';\n\nconst Register = () => {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log('this is the handle submit');\n\n        const createUser = async (usernameInput, passwordInput) => {\n            console.log('These are the arguments', usernameInput, passwordInput)\n            // console.log('This is the createUser func')\n            const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/register', {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                     \n                        username: usernameInput,\n                        password: passwordInput,\n                    \n                })\n            });\n            console.log('This is the response', response);\n            if (response) {\n                const  { token }  = await response.json();\n                console.log(\"this is the token:\", token)\n                localStorage.setItem(\"token\", token)\n                \n            }\n            \n            \n            // if (data) {\n            //     const  { token }  = await data.json();\n            //     console.log(\"this is the token:\", token)\n            //     localStorage.setItem(\"token\", token)\n                \n            // }\n            return response;\n            \n        \n            \n            \n        }\n        \n        createUser(username, password)\n        setUsername('');\n        setPassword('');\n        \n       \n            \n        }\n    \n\n\n\n    const locallySourcedToken = localStorage.getItem('token');\n    return (\n        <div class=\"userProfile\">\n        This is the register page\n\n            <div>\n                <form onSubmit={handleSubmit} className='registerForm'>\n\n                    <input type = \"text\" placeholder = \"New Username\" value = {username} onChange={(event) => setUsername(event.target.value)}></input>\n\n                    <input type = \"text\" placeholder = \"New Password\" value = {password} onChange={(event) => setPassword(event.target.value)}></input>\n\n                    <button type = \"submit\" className=\"button\">\n                        Create New Account\n                    </button>\n                </form>\n            </div>\n        </div>\n\n        \n    ) \n   };\n\n\n\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}