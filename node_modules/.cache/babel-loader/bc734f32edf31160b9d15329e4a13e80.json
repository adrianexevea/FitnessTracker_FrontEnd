{"ast":null,"code":"var _jsxFileName = \"/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom'; // import {BrowserRouter} from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://fitnesstrac-kr.herokuapp.com/api';\n\nconst Register = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setErrorMessage] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const registerUser = async (username, password) => {\n      try {\n        const response = await fetch(`${BASE_URL}/users/register`, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: username,\n            password: password\n          })\n        });\n\n        if (response) {\n          const {\n            token\n          } = await response.json();\n          console.log(\"token\", token);\n          localStorage.setItem(\"token\", token);\n        }\n\n        console.log('user Registered');\n        return response;\n      } catch (error) {\n        console.log('user unable to register');\n        console.error(error);\n        throw error;\n      }\n    };\n\n    registerUser(username, password);\n    setUsername('');\n    setPassword('');\n  };\n\n  const locallySourcedToken = localStorage.getItem('token');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\\\"Login-Form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Sign On to Fitness Tracker \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Username (required)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password (required)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign On\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Register, \"5DnrUD3OgBDzp8S6vtfv8gZK+Mg=\");\n\n_c = Register;\nexport default Register; //         const createUser = async (usernameInput, passwordInput) => {\n//             console.log('These are the arguments', usernameInput, passwordInput)\n//             // console.log('This is the createUser func')\n//             const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/register', {\n//                 method: \"POST\",\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({\n//                         username: usernameInput,\n//                         password: passwordInput,\n//                 })\n//             });\n//             console.log('This is the response', response);\n//             if (response) {\n//                 const  { token }  = await response.json();\n//                 console.log(\"this is the token:\", token)\n//                 localStorage.setItem(\"token\", token)\n//             }\n//             // if (data) {\n//             //     const  { token }  = await data.json();\n//             //     console.log(\"this is the token:\", token)\n//             //     localStorage.setItem(\"token\", token)\n//             // }\n//             return response;\n//         }\n//         createUser(username, password)\n//         setUsername('');\n//         setPassword('');\n//         }\n//         const locallySourcedToken = localStorage.getItem('token');\n//         return (\n//             <div className='login-form'>\n//                 <form onSubmit={handleSubmit}>\n//                     <h2>New User</h2>\n//                     <input type='text' placeholder='Username' value={username} onChange={(event) => {\n//                         // console.log('Username input', event.target.value)\n//                         setUsername(event.target.value)\n//                         // console.log('The state user', username)\n//                     }}>\n//                     </input>\n//                     <br></br>\n//                     <br></br>\n//                     <input type='text' placeholder='Password' value={password} onChange={(event) => {\n//                         // console.log('Password input', event.target.value)\n//                         setPassword(event.target.value)\n//                         // console.log('The state', password)\n//                     }}>\n//                     </input>\n//                     <br></br>\n//                     <br></br>\n//                     <button type='submit'>\n//                         Sign Up\n//                     </button>\n//                 </form>\n//                 <div>\n//                     {\n//                         locallySourcedToken && locallySourcedToken.length ? <div> Logged In </div> : ''\n//                     }\n//                 </div>\n//             </div>\n//         )\n//     }\n// export default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/adrianexevea/Documents/USD_CodingBootcamp_2108_Folder/Coursework_Phase3/fitness_tracker_frontend/src/components/Register.js"],"names":["React","useState","ReactDOM","BASE_URL","Register","username","setUsername","password","setPassword","error","setErrorMessage","handleSubmit","event","preventDefault","registerUser","response","fetch","method","headers","body","JSON","stringify","token","json","console","log","localStorage","setItem","locallySourcedToken","getItem","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\n// import {BrowserRouter} from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n\nconst BASE_URL = 'https://fitnesstrac-kr.herokuapp.com/api';\n\nconst Register = () => {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setErrorMessage] = useState('')\n\n    const handleSubmit = async (event) => {\n\n        event.preventDefault();\n            const registerUser = async (username, password) => {\n                try {\n                    const response = await fetch(`${BASE_URL}/users/register`, {\n                        method: \"POST\",\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({\n                            username: username,\n                            password: password,\n                            })\n                        });\n                        if(response) {\n                            const {token} = await response.json();\n                            console.log(\"token\", token)\n                            localStorage.setItem(\"token\", token)\n                        }\n                        console.log('user Registered')\n                        return response;\n\n                    } catch (error) {\n                        console.log('user unable to register')\n                        console.error(error)\n                        throw error;\n                    }\n            }\n            registerUser(username, password)\n            setUsername('');\n            setPassword('');\n        }\n\n        const locallySourcedToken = localStorage.getItem('token');\n\n        return (\n            <div className='\"Login-Form'>\n                <form onSubmit={handleSubmit}>\n                    <h3> Sign On to Fitness Tracker </h3>\n                    <label> Username (required)</label><br></br>\n                    <input type='text' placeholder='Enter Username' value= {username} onChange={(event) => setUsername(event.target.value)}>\n                    </input>\n                    <br></br>\n                    <br></br>\n                    <label>Password (required)</label><br></br>\n                    <input type='text' placeholder='Enter Password' value= {password} onChange={(event) => setPassword(event.target.value)}>\n                    </input>\n                    <br></br>\n                    <br></br>\n                    <button type='submit'>\n                        Sign On\n                    </button>\n                </form>\n            </div>\n            \n            \n            \n        )\n    }\nexport default Register;\n\n\n\n\n\n\n\n//         const createUser = async (usernameInput, passwordInput) => {\n//             console.log('These are the arguments', usernameInput, passwordInput)\n//             // console.log('This is the createUser func')\n//             const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/register', {\n//                 method: \"POST\",\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({\n                     \n//                         username: usernameInput,\n//                         password: passwordInput,\n                    \n//                 })\n//             });\n//             console.log('This is the response', response);\n//             if (response) {\n//                 const  { token }  = await response.json();\n//                 console.log(\"this is the token:\", token)\n//                 localStorage.setItem(\"token\", token)\n                \n//             }\n            \n            \n//             // if (data) {\n//             //     const  { token }  = await data.json();\n//             //     console.log(\"this is the token:\", token)\n//             //     localStorage.setItem(\"token\", token)\n                \n//             // }\n//             return response;\n            \n        \n            \n            \n//         }\n        \n//         createUser(username, password)\n//         setUsername('');\n//         setPassword('');\n        \n       \n            \n//         }\n    \n//         const locallySourcedToken = localStorage.getItem('token');\n\n//         return (\n//             <div className='login-form'>\n//                 <form onSubmit={handleSubmit}>\n//                     <h2>New User</h2>\n    \n//                     <input type='text' placeholder='Username' value={username} onChange={(event) => {\n//                         // console.log('Username input', event.target.value)\n//                         setUsername(event.target.value)\n//                         // console.log('The state user', username)\n//                     }}>\n//                     </input>\n//                     <br></br>\n//                     <br></br>\n//                     <input type='text' placeholder='Password' value={password} onChange={(event) => {\n//                         // console.log('Password input', event.target.value)\n//                         setPassword(event.target.value)\n//                         // console.log('The state', password)\n//                     }}>\n//                     </input>\n//                     <br></br>\n//                     <br></br>\n//                     <button type='submit'>\n//                         Sign Up\n//                     </button>\n//                 </form>\n    \n//                 <div>\n//                     {\n//                         locallySourcedToken && locallySourcedToken.length ? <div> Logged In </div> : ''\n//                     }\n//                 </div>\n//             </div>\n//         )\n    \n    \n    \n//     }\n\n\n\n\n// export default Register;"]},"metadata":{},"sourceType":"module"}